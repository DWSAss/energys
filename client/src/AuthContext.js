import { createContext, useContext, useState, useEffect } from "react";

// –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const AuthContext = createContext();

export const AuthProvider = ({ children }) => {
    const [role, setRole] = useState(null);  // –•—Ä–∞–Ω–∏–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const [isAuthenticated, setIsAuthenticated] = useState(false);
    const [userName, setUserName] = useState(null);  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    useEffect(() => {
        const token = localStorage.getItem("token");
      
        console.log("üîç –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –≤ Account:", token);
      
        if (!token) {
          console.warn("üö® –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã—Ö–æ–¥ –∏–∑ Account");
          setError("–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω.");
          return;
        }
      
        fetchAccountData(); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      
      }, [isAuthenticated]); // –¢–µ–ø–µ—Ä—å useEffect –∑–∞–≤–∏—Å–∏—Ç –æ—Ç isAuthenticated!
      

    const decodeToken = (token) => {
        try {
            const base64Url = token.split(".")[1]; // –ü–æ–ª—É—á–∞–µ–º payload
            const base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
            const decodedData = JSON.parse(decodeURIComponent(escape(atob(base64)))); // –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            return decodedData;
        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:", e);
            return {};
        }
    };
    
    
    const updateAuthState = (token, role) => {
        const decoded = decodeToken(token); // –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
        const name = decoded.name || "–ì–æ—Å—Ç—å"; // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è
    
        console.log("–î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–æ–∫–µ–Ω–∞:", decoded);
    
        localStorage.setItem("token", token);
        localStorage.setItem("role", role);
        localStorage.setItem("name", name); // –¢–µ–ø–µ—Ä—å –∏–º—è –¥–æ–ª–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è
    
        setIsAuthenticated(!!token);
        setRole(role);
        setUserName(name);
    };

    useEffect(() => {
        const storedName = localStorage.getItem("name");
        console.log("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage:", storedName); 
    }, []);
    
    return (
        <AuthContext.Provider value={{ role, isAuthenticated, userName, updateAuthState }}>
            {children}
        </AuthContext.Provider>
    );
};

export const useAuth = () => useContext(AuthContext);
